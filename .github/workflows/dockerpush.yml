name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: odoo

jobs:
  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Update config file
        run: cp addons/config.ini.example addons/config.ini

      - name: Build image
        run: docker-compose up -d

      - name: docker login
        uses: docker/login-action@v1.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: push image
        run: |
          #IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=shdkej/odoo_container

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          ORIGINAL_IMAGE=$(docker ps -aqf "name=odoo_gvm_web")
          docker commit $ORIGINAL_IMAGE $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: report test
        run: |
          WORKING_DIR=/usr/lib/python2.7/dist-packages/odoo/addons/
          ORIGINAL_IMAGE=$(docker ps -aqf "name=odoo_gvm_web")
          docker ps -a
          echo $ORIGINAL_IMAGE
          docker exec -i --user root $ORIGINAL_IMAGE pip install pytest
          docker exec -i --user root $ORIGINAL_IMAGE pip install pytest-cov
          docker exec -i --user root $ORIGINAL_IMAGE pytest --cov=./hr --cov-report=xml
          docker cp $ORIGINAL_IMAGE:$WORKING_DIR/coverage.xml ./coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
